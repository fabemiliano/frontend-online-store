{"ast":null,"code":"var _jsxFileName = \"/Users/fmartins/Trybe/fabemiliano.github.io/projetos/frontend-online-store/sd-03-block15-project-frontend-online-store-04/src/components/Rating.js\";\nimport StarRatingComponent from 'react-star-rating-component';\nimport React from 'react';\nimport './Rating.css';\nimport Comments from './Comments';\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n      rating: 0,\n      storage: []\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      storage\n    } = this.state;\n    localStorage.setItem('comments', [JSON.stringify(storage)]);\n  }\n\n  onStarClick(event) {\n    this.setState({\n      rating: event\n    });\n  }\n\n  updateField(field, event) {\n    this.setState({\n      [field]: event.target.value\n    });\n  }\n\n  createComment() {\n    const {\n      email,\n      message,\n      rating,\n      storage\n    } = this.state;\n    this.setState({\n      email: '',\n      message: '',\n      rating: 0,\n      storage: [...storage, {\n        email,\n        message,\n        rating\n      }]\n    });\n  }\n\n  renderEmail() {\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rating-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      placeholder: \"E-mail\",\n      value: email,\n      onChange: event => this.updateField('email', event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderTextArea() {\n    const {\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Mensagem\",\n      \"data-testid\": \"product-detail-evaluation\",\n      value: message,\n      onChange: event => this.updateField('message', event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const {\n      storage,\n      rating\n    } = this.state;\n\n    if (storage === []) {\n      this.setState({\n        storage: JSON.parse(lo)\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Deixe sua Avalia\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(StarRatingComponent, {\n      name: \"rate1\",\n      className: \"stars\",\n      starCount: 5,\n      value: rating,\n      onStarClick: e => this.onStarClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), this.renderEmail(), this.renderTextArea(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"rating-button\",\n      onClick: () => this.createComment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Avaliar\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comments, {\n      storage: storage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), console.log(storage)));\n  }\n\n}\n\nexport default Rating;","map":{"version":3,"sources":["/Users/fmartins/Trybe/fabemiliano.github.io/projetos/frontend-online-store/sd-03-block15-project-frontend-online-store-04/src/components/Rating.js"],"names":["StarRatingComponent","React","Comments","Rating","Component","constructor","props","state","email","message","rating","storage","componentDidUpdate","localStorage","setItem","JSON","stringify","onStarClick","event","setState","updateField","field","target","value","createComment","renderEmail","renderTextArea","render","parse","lo","e","console","log"],"mappings":"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","sourcesContent":["import StarRatingComponent from 'react-star-rating-component';\nimport React from 'react';\nimport './Rating.css';\nimport Comments from './Comments';\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n      rating: 0,\n      storage: [],\n    };\n  }\n\n  componentDidUpdate() {\n    const { storage } = this.state;\n    localStorage.setItem('comments', [JSON.stringify(storage)]);\n  }\n\n  onStarClick(event) {\n    this.setState({ rating: event });\n  }\n\n  updateField(field, event) {\n    this.setState({ [field]: event.target.value });\n  }\n\n  createComment() {\n    const { email, message, rating, storage } = this.state;\n    this.setState({\n      email: '',\n      message: '',\n      rating: 0,\n      storage: [...storage, { email, message, rating }],\n    });\n  }\n\n  renderEmail() {\n    const { email } = this.state;\n    return (\n      <div className=\"rating-section\">\n        <input\n          id=\"email\"\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={(event) => this.updateField('email', event)}\n        />\n      </div>\n    );\n  }\n\n  renderTextArea() {\n    const { message } = this.state;\n    return (\n      <textarea\n        placeholder=\"Mensagem\"\n        data-testid=\"product-detail-evaluation\"\n        value={message}\n        onChange={(event) => this.updateField('message', event)}\n      />\n    );\n  }\n\n  render() {\n    const { storage, rating } = this.state;\n    if (storage === []) {this.setState({storage: JSON.parse(lo)})}\n    return (\n      <div>\n        <form>\n          <h2>Deixe sua Avaliação</h2>\n          <StarRatingComponent\n            name=\"rate1\"\n            className=\"stars\"\n            starCount={5}\n            value={rating}\n            onStarClick={(e) => this.onStarClick(e)}\n          />\n          {this.renderEmail()}\n          {this.renderTextArea()}\n          <button type=\"button\" className=\"rating-button\" onClick={() => this.createComment()}>\n            Avaliar\n          </button>\n        </form>\n        <div>\n          <Comments storage={storage} />\n          {console.log(storage)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}