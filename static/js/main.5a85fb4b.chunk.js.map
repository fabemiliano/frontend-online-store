{"version":3,"sources":["components/carrinho.png","components/cart.png","services/api.js","components/ButtonListing.jsx","components/ProductList.jsx","components/ButtonCart.jsx","components/SearchBar.jsx","components/CartItem.jsx","components/CartPage.jsx","components/Increment.jsx","components/Comments.jsx","components/Rating.jsx","components/ProductDetails.jsx","components/Checkout.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","a","fetch","data","json","result","categoryId","query","ButtonListing","props","addCart","bind","product","this","getCart","JSON","parse","localStorage","getItem","quantity","setItem","stringify","total","verifyItem","find","item","id","index","indexOf","type","onClick","data-testid","className","src","cart2","width","alt","Component","ProductList","state","products","showProducts","api","category","then","setState","results","length","map","key","title","thumbnail","price","shipping","free_shipping","console","log","to","pathname","renderButton","React","ButtonCart","storage","reduce","sum","e","cart","SearchBar","search","searchWithCategory","categories","changeValue","target","value","onChange","el","name","getCategory","renderSearchBar","doSearch","renderCategories","CartItem","decrease","increase","CartPage","arrayProducts","available_quantity","Increment","info","infoWithQuantity","newStorage","addToCart","Comments","email","message","starCount","rating","onStarClick","renderComments","Rating","event","field","placeholder","updateField","renderEmail","renderTextArea","createComment","ProductDetails","location","address","condition","avail","city_name","Checkout","renderTotal","finalValue","FinalValue","toFixed","htmlFor","Footer","App","document","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"8MAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,+ZCApC,8BAAAC,EAAA,sEACcC,MAAM,qDADpB,cACCC,EADD,gBAEgBA,EAAKC,OAFrB,cAECC,EAFD,yBAGEA,GAHF,4C,kEAKA,WAA+CC,EAAYC,GAA3D,iBAAAN,EAAA,sEACcC,MAAM,0DAAD,OAA2DI,EAA3D,cAA2EC,IAD9F,cACCJ,EADD,gBAEgBA,EAAKC,OAFrB,cAECC,EAFD,yBAGEA,GAHF,4C,iECuCQG,E,kDAxCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,QAAU,EAAKA,QAAQC,KAAb,gBAHE,E,sDAMR,IACDC,EAAYC,KAAKJ,MAAjBG,QACFE,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,SAChD,IAAKJ,EAEH,OADAF,EAAQO,SAAW,EACZF,aAAaG,QAAQ,OAAQL,KAAKM,UAAU,CAAC,2BAAKT,GAAN,IAAeU,MAAO,OAE3E,IAAMC,EAAaT,EAAQU,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOd,EAAQc,MAC9D,GAAIH,EAAY,CACd,IAAMI,EAAQb,EAAQc,QAAQL,GAI9B,MAH4B,cAAxBA,EAAWJ,SAA0BL,EAAQa,GAAOL,MAAQ,EAC3DR,EAAQa,GAAOL,OAAS,EAEtBL,aAAaG,QAAQ,OAAQL,KAAKM,UAAUP,IAGrD,OADAF,EAAQO,SAAW,EACZF,aAAaG,QAAQ,OAAQL,KAAKM,UAAL,sBAAmBP,GAAnB,4BAAiCF,GAAjC,IAA0CU,MAAO,U,+BAIrF,OACE,4BACEO,KAAK,SACLC,QAASjB,KAAKH,QACdqB,cAAY,sBACZC,UAAU,cAJZ,wBAOE,yBAAKC,IAAKC,IAAOC,MAAM,OAAOC,IAAI,mB,GAnCdC,a,ICmEbC,E,kDA5Cb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXC,SAAU,GACVC,cAAc,GAJC,E,gEAQE,IAAD,SACS5B,KAAKJ,OF9B7B,SAAP,qCE+BIiC,CAFkB,EACVC,SADU,EACAlB,MAEfmB,MAAK,SAACvC,GACL,EAAKwC,SAAS,CACZL,SAAUnC,EAAOyC,QACjBL,cAAc,S,+BAKZ,IAAD,EAC4B5B,KAAK0B,MAAhCC,EADD,EACCA,SAAUC,EADX,EACWA,aAClB,OAAwB,IAApBD,EAASO,SAAiC,IAAjBN,EACpB,4DAGP,yBAAKT,UAAU,gBACZQ,EAASQ,KAAI,SAACpC,GAAD,OACZ,yBAAKqC,IAAKrC,EAAQc,GAAIM,UAAU,UAAUD,cAAY,WACpD,uBAAGC,UAAU,iBAAiBpB,EAAQsC,OACtC,yBAAKjB,IAAKrB,EAAQuC,UAAWf,IAAI,SACjC,gCAEGxB,EAAQwC,OAEVxC,EAAQyC,SAASC,eAAiB,uBAAGvB,cAAY,iBAAf,mBAtD/C,SAAsBL,EAAId,GAExB,OADA2C,QAAQC,IAAI3C,MAEV,4BACEgB,KAAK,UAEL,kBAAC,IAAD,CACEG,UAAU,gBACVD,cAAY,sBACZ0B,GAAI,CACFC,SAAS,IAAD,OAAMhC,EAAN,YACRa,MAAO3B,IALX,iBAiDO+C,CAAa/C,EAAQc,GAAId,GAC1B,kBAAC,EAAD,CAAeA,QAASA,a,GArCVgD,IAAMvB,W,uBCEjBwB,MAtBf,WACE,IAAIC,EAAU/C,KAAKC,MAAMC,aAAaC,QAAQ,SAC9B,OAAZ4C,IACFA,EAAU,IAEZ,IAAMxC,EAAQwC,EAAQC,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,EAAE3C,QAAQ,GAE1D,OACE,yBAAKU,UAAU,aACb,kBAAC,IAAD,CAAMyB,GAAG,SACP,yBACExB,IAAKiC,IACL/B,MAAM,OACNC,IAAI,YAAYL,cAAY,uBAAuBC,UAAU,cAGjE,qDACA,yBAAKD,cAAY,sBAAsBT,GAAS,O,IC8FvC6C,E,kDAtGb,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXd,KAAM,GACNkB,SAAU,GACVyB,QAAQ,EACRC,oBAAoB,EACpBC,WAAY,IAEd,EAAKC,YAAc,EAAKA,YAAY5D,KAAjB,gBATF,E,gEAYE,IAAD,QJ1Bf,WAAP,gCI2BI+B,GACGE,MAAK,SAACvC,GAAD,OAAY,EAAKwC,SAAS,CAAEyB,WAAYjE,S,kCAGtCC,GACVO,KAAKgC,SAAS,CACZF,SAAUrC,EACV8D,QAAQ,EACRC,oBAAoB,M,iCAKtBxD,KAAKgC,SAAS,CACZuB,QAAQ,EACRC,oBAAoB,M,kCAIZJ,GACVpD,KAAKgC,SAAS,CACZpB,KAAMwC,EAAEO,OAAOC,MACfL,QAAQ,M,wCAKV,OACE,gCACE,2BACErC,cAAY,cACZF,KAAK,OACLG,UAAU,QACV0C,SAAU7D,KAAK0D,cApDrB,uBAAGxC,cAAY,uBAAuBC,UAAU,kBAAhD,+D,yCA2DkB,IAAD,OAEjB,OADuBnB,KAAK0B,MAApB+B,WAEKtB,KAAI,SAAC2B,GAAD,OACb,yBAAK3C,UAAU,cACb,4BACEH,KAAK,SACLE,cAAY,WACZkB,IAAK0B,EAAGjD,GACR+C,MAAOE,EAAGC,KACV9C,QAAS,kBAAM,EAAK+C,YAAYF,EAAGjD,MAElCiD,EAAGC,Y,+BAMJ,IAAD,SACgD/D,KAAK0B,MAApDd,EADD,EACCA,KAAM2C,EADP,EACOA,OAAQC,EADf,EACeA,mBAAoB1B,EADnC,EACmCA,SAC1C,OACE,6BACE,yBAAKX,UAAU,WACb,yBAAKA,UAAU,aACZnB,KAAKiE,kBACN,4BACE/C,cAAY,eACZF,KAAK,SACLC,QAAS,kBAAM,EAAKiD,aAHtB,cAQF,kBAAC,EAAD,CAAY/C,UAAU,eAExB,yBAAKA,UAAU,mBAEb,yBAAKA,UAAU,mBACb,2DACCnB,KAAKmE,oBAEPZ,GAAU,kBAAC,EAAD,CAAa3C,KAAMA,IAC7B4C,GAAsB,kBAAC,EAAD,CAAa1B,SAAUA,EAAUlB,KAAMA,U,GAhGhDmC,IAAMvB,WCwCf4C,G,wDAjDb,WAAYxE,GAAQ,IAAD,0BAETa,GADR,cAAMb,IACiBA,MAAfa,MAFS,OAGjB,EAAKiB,MAAQ,CAAEjB,SAHE,E,uDAOCT,KAAK0B,MAAfjB,MACI,GACVT,KAAKgC,UAAS,SAACN,GAAD,MAAY,CAAEjB,MAAOiB,EAAMjB,MAAQ,Q,iCAIzC,IACFH,EAAaN,KAAKJ,MAAlBU,SACUN,KAAK0B,MAAfjB,MACIH,GACVN,KAAKgC,UAAS,SAACN,GAAD,MAAY,CAAEjB,MAAOiB,EAAMjB,MAAQ,Q,+BAI3C,IAAD,OACCA,EAAUT,KAAK0B,MAAfjB,MADD,EAE6BT,KAAKJ,MAAjCyC,EAFD,EAECA,MAAOC,EAFR,EAEQA,UAAWC,EAFnB,EAEmBA,MAC1B,OACE,yBAAKpB,UAAU,aACb,yBAAKC,IAAKkB,EAAWf,IAAKc,IAC1B,uBAAGnB,cAAY,8BAA8BmB,GAC7C,4BACErB,KAAK,SACLE,cAAY,4BACZD,QAAS,kBAAM,EAAKoD,SAAS5D,KAH/B,KAOA,uBAAGS,cAAY,kCAAkCT,GACjD,4BACEO,KAAK,SACLE,cAAY,4BACZD,QAAS,kBAAM,EAAKqD,aAHtB,KAOA,gDAAkB/B,S,GA5CHQ,IAAMvB,Y,ICoEd+C,E,kDA3Cb,WAAY3E,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAM+B,EAAWzB,KAAKC,MAAMC,aAAaC,QAAQ,SAFhC,OAGjB,EAAKqB,MAAQ,CAAE8C,cAAe7C,GAHb,E,gEAME,IACX6C,EAAkBxE,KAAK0B,MAAvB8C,cAER,GADApE,aAAaG,QAAQ,OAAQL,KAAKM,UAAUgE,IACxCA,EAAe,CAEjBpE,aAAaG,QAAQ,aADF,M,+BAKb,IACAiE,EAAkBxE,KAAK0B,MAAvB8C,cACR,OAAIA,GAA2C,IAAzBA,EAActC,OAEhC,yBAAKf,UAAU,aACb,wBAAIA,UAAU,WAAd,yBACA,yBAAKA,UAAU,aACZqD,EAAcrC,KAAI,SAACiB,GAAD,OACjB,kBAAC,EAAD,CACEhB,IAAKgB,EAAEf,MACPA,MAAOe,EAAEf,MACT5B,MAAO2C,EAAE3C,MACT8B,MAAOa,EAAEb,MACTD,UAAWc,EAAEd,UACbhC,SAAU8C,EAAEqB,yBAvCxB,yBAAKtD,UAAU,kBACb,kBAAC,IAAD,CAAMyB,GAAG,KAAI,4BAAQ5B,KAAK,UAAb,WACb,kBAAC,IAAD,CAAME,cAAY,oBAAoB0B,GAAG,aACvC,4BAAQ5B,KAAK,UAAb,uBAdJ,yBAAKG,UAAU,cACb,yBAAKA,UAAU,gBAAgBD,cAAY,+BAA3C,8BAGA,kBAAC,IAAD,CAAM0B,GAAG,KAAI,4BAAQ5B,KAAK,SAASG,UAAU,eAAhC,gB,GAgBI4B,IAAMvB,WC4BdkD,G,wDApDb,WAAY9E,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CAAEjB,MAAO,GAFL,E,uDAMCT,KAAK0B,MAAfjB,MACI,GACVT,KAAKgC,UAAS,SAACN,GAAD,MAAY,CAAEjB,MAAOiB,EAAMjB,MAAQ,Q,iCAIzC,IACFH,EAAaN,KAAKJ,MAAlBU,SACUN,KAAK0B,MAAfjB,MACIH,GACVN,KAAKgC,UAAS,SAACN,GAAD,MAAY,CAAEjB,MAAOiB,EAAMjB,MAAQ,Q,kCAIxC,IACHA,EAAUT,KAAK0B,MAAfjB,MACAkE,EAAS3E,KAAKJ,MAAd+E,KACFC,EAAgB,2BAAQD,GAAR,IAAclE,UAChCwC,EAAU/C,KAAKC,MAAMC,aAAaC,QAAQ,SAC9B,OAAZ4C,IACFA,EAAU,IAEZ,IAAM4B,EAAa3E,KAAKM,UAAL,sBAAmByC,GAAnB,CAA4B2B,KAC/CxE,aAAaG,QAAQ,OAAQsE,K,+BAGrB,IAAD,OACCpE,EAAUT,KAAK0B,MAAfjB,MACR,OACE,6BACE,0CACA,4BAAQO,KAAK,SAASG,UAAU,YAAYF,QAAS,kBAAM,EAAKoD,aAAhE,KACC5D,EACD,4BAAQO,KAAK,SAASG,UAAU,YAAYF,QAAS,kBAAM,EAAKqD,aAAhE,KACA,4BACEpD,cAAY,6BACZF,KAAK,SACLC,QAAS,kBAAM,EAAK6D,cAHtB,8B,GAzCgB/B,IAAMvB,Y,yBC8CfuD,G,2LA1CK,IAAD,OAEf,OADgB7E,KAAKC,MAAMC,aAAaC,QAAQ,aAEtC8B,KAAI,SAACiB,GAAD,OACV,yBAAKjC,UAAU,UAAUiB,IAAKgB,EAAE4B,OAC9B,4CAAc5B,EAAE4B,QAChB,+CAAiB5B,EAAE6B,UACnB,mCAEE,kBAAC,IAAD,CACElB,KAAK,QACL5C,UAAU,QACV+D,UAAW,EACXtB,MAAOR,EAAE+B,OACTC,YAAa,kBAAM,EAAKA,wB,+BASlC,OADgBlF,KAAKC,MAAMC,aAAaC,QAAQ,aAU9C,yBAAKc,UAAU,eACb,8CACA,yBAAKD,cAAY,6BACdlB,KAAKqF,mBAVR,yBAAKlE,UAAU,eACb,8CACA,4D,GA5Ba4B,IAAMvB,YCoFd8D,E,kDAnFb,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXsD,MAAO,GACPC,QAAS,GACTE,OAAQ,GALO,E,wDASPI,GACVvF,KAAKgC,SAAS,CAAEmD,OAAQI,M,kCAGdC,EAAOD,GACjBvF,KAAKgC,SAAL,eAAiBwD,EAAQD,EAAM5B,OAAOC,U,sCAGvB,IAAD,EACqB5D,KAAK0B,MAAhCsD,EADM,EACNA,MAAOC,EADD,EACCA,QAASE,EADV,EACUA,OACpBlC,EAAU/C,KAAKC,MAAMC,aAAaC,QAAQ,aAC9B,OAAZ4C,IAAoBA,EAAU,IAClC,IAAM4B,EAAU,sBAAO5B,GAAP,CAAgB,CAAE+B,QAAOC,UAASE,YAClD/E,aAAaG,QAAQ,WAAY,CAACL,KAAKM,UAAUqE,KACjD7E,KAAKgC,SAAS,CACZgD,MAAO,GACPC,QAAS,GACTE,OAAQ,M,oCAIG,IAAD,OACJH,EAAUhF,KAAK0B,MAAfsD,MACR,OACE,yBAAK7D,UAAU,kBACb,2BACEN,GAAG,QACH4E,YAAY,SACZ7B,MAAOoB,EACPnB,SAAU,SAAC0B,GAAD,OAAW,EAAKG,YAAY,QAASH,S,uCAMrC,IAAD,OACPN,EAAYjF,KAAK0B,MAAjBuD,QACR,OACE,8BACEQ,YAAY,WACZvE,cAAY,4BACZ0C,MAAOqB,EACPpB,SAAU,SAAC0B,GAAD,OAAW,EAAKG,YAAY,UAAWH,Q,+BAK7C,IAAD,OACCJ,EAAWnF,KAAK0B,MAAhByD,OACR,OACE,6BACE,8BACE,yDACA,kBAAC,IAAD,CACEpB,KAAK,QACL5C,UAAU,QACV+D,UAAW,EACXtB,MAAOuB,EACPC,YAAa,SAAChC,GAAD,OAAO,EAAKgC,YAAYhC,MAEtCpD,KAAK2F,cACL3F,KAAK4F,iBACN,4BAAQ5E,KAAK,SAASG,UAAU,gBAAgBF,QAAS,kBAAM,EAAK4E,kBAApE,YAIF,6BACE,kBAAC,EAAD,Y,GA7EW9C,IAAMvB,WCENsE,E,uKACT,IAAD,EAQH9F,KAAKJ,MANPmG,SACErE,MACEW,EAJC,EAIDA,MAAOE,EAJN,EAIMA,MAAO1B,EAJb,EAIaA,GAAIyB,EAJjB,EAIiBA,UAClB0D,EALC,EAKDA,QAASC,EALR,EAKQA,UAA+BC,EALvC,EAKmBzB,mBAIN/C,EAAY1B,KAAKJ,MAA7BmG,SAAYrE,MAEpB,OACE,iCACE,yBAAKP,UAAU,iBACb,yBAAKD,cAAY,WACf,wBAAIA,cAAY,uBAAuBmB,GACvC,4BAAKxB,GACL,yBAAKO,IAAKkB,EAAWf,IAAKc,IAC1B,mDAAkBE,IAClB,2BAAIyD,EAAQG,WACZ,2BAAIF,GACJ,kBAAC,EAAD,CAAW3F,SAAU4F,EAAOvB,KAAMjD,IAClC,kBAAC,IAAD,CAAMkB,GAAG,KAAI,4BAAQ5B,KAAK,UAAb,WACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,W,GA3BoCQ,a,UCgF7B4E,E,kDAlDb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CAAEjB,MAAO,GAFL,E,gEAMjBT,KAAKqG,gB,qCAGQ5F,EAAO8B,GACpB,IAAM+D,EAAa7F,EAAQ8B,EAC3BvC,KAAKgC,UAAS,SAACN,GAAD,MAAY,CAAEjB,MAAOiB,EAAMjB,MAAQ6F,Q,oCAIjD,IACMC,EADUrG,KAAKC,MAAMC,aAAaC,QAAQ,SACpB6C,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,EAAE3C,MAAQ2C,EAAEb,QAAS,GAAGiE,QAAQ,GACvFxG,KAAKgC,UAAS,iBAAO,CAAEvB,MAAO8F,Q,+BAI9B,IAAMtD,EAAU/C,KAAKC,MAAMC,aAAaC,QAAQ,SACxCI,EAAUT,KAAK0B,MAAfjB,MACR,OACE,6BACE,yBAAKU,UAAU,QACb,yBAAKA,UAAU,cACZ8B,EAAQd,KAAI,SAACiB,GAAD,OACX,yBAAKhB,IAAKgB,EAAEf,OACV,6BACE,8BAAOe,EAAEf,OACT,8BAAOe,EAAE3C,OACT,8BAAO2C,EAAEb,aAMjB,yBAAKpB,UAAU,SACb,uCACA,8BAAOV,KAtEf,8BACE,2BAAOgG,QAAQ,QAAf,iBAEE,2BAAO5F,GAAG,OAAOK,cAAY,uBAE/B,2BAAOuF,QAAQ,SAAf,SAEE,2BAAO5F,GAAG,QAAQK,cAAY,oBAEhC,2BAAOuF,QAAQ,OAAf,OAEE,2BAAO5F,GAAG,MAAMK,cAAY,kBAE9B,2BAAOuF,QAAQ,gBAAf,YAEE,2BAAO5F,GAAG,eAAeK,cAAY,oBAEvC,2BAAOuF,QAAQ,OAAf,OAEE,2BAAO5F,GAAG,MAAMK,cAAY,kBAE9B,2BAAOuF,QAAQ,WAAf,eAEE,2BAAO5F,GAAG,UAAUK,cAAY,uBAmDhC,kBAAC,IAAD,CAAM0B,GAAG,KAAI,4BAAQ5B,KAAK,UAAb,gB,GA7CE+B,IAAMvB,WCjBdkF,G,6KAZX,OACE,yBAAKvF,UAAU,UACb,0BAAMA,UAAU,SAAhB,mBAAwC,6BAAxC,oBACc,6BADd,mBAEgB,6BAFhB,a,GALa4B,IAAMvB,YCyBZmF,E,kLAnBXC,SAASvE,MAAQ,2B,+BAGjB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,QAAQC,UAAWxC,IACrC,kBAAC,IAAD,CAAOuC,KAAK,eAAeC,UAAWjB,IACtC,kBAAC,IAAD,CAAOgB,KAAK,YAAYC,UAAWX,IACnC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UAAWzD,MAGrC,kBAAC,EAAD,W,GAfUP,IAAMvB,WCIJwF,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFV,SAASW,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpF,QAAQoF,MAAMA,EAAM7C,c","file":"static/js/main.5a85fb4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carrinho.2ad5e133.png\";","module.exports = __webpack_public_path__ + \"static/media/cart.c343ae9b.png\";","export async function getCategories() {\n  const data = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const result = await data.json();\n  return result;\n}\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const data = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const result = await data.json();\n  return result;\n}\n","import React, { Component } from 'react';\nimport cart2 from './carrinho.png';\n\nclass ButtonListing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addCart = this.addCart.bind(this);\n  }\n\n  addCart() {\n    const { product } = this.props;\n    const getCart = JSON.parse(localStorage.getItem('cart'));\n    if (!getCart) {\n      product.quantity = 1;\n      return localStorage.setItem('cart', JSON.stringify([{ ...product, total: 1 }]));\n    }\n    const verifyItem = getCart.find((item) => item.id === product.id);\n    if (verifyItem) {\n      const index = getCart.indexOf(verifyItem);\n      if (verifyItem.quantity === 'undefined') getCart[index].total = 1;\n      else getCart[index].total += 1;\n\n      return localStorage.setItem('cart', JSON.stringify(getCart));\n    }\n    product.quantity = 1;\n    return localStorage.setItem('cart', JSON.stringify([...getCart, { ...product, total: 1 }]));\n  }\n\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.addCart}\n        data-testid=\"product-add-to-cart\"\n        className=\"button-add\"\n      >\n        Adicionar ao Carrinho\n        <img src={cart2} width=\"20px\" alt=\"cart-icon\" />\n      </button>\n    );\n  }\n}\n\nexport default ButtonListing;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as api from '../services/api';\nimport './ProductList.css';\nimport ButtonListing from './ButtonListing';\n\nfunction renderButton(id, product) {\n  console.log(this);\n  return (\n    <button\n      type=\"button\"\n    >\n      <Link\n        className=\"link-detalhes\"\n        data-testid=\"product-detail-link\"\n        to={{\n          pathname: `/${id}/details`,\n          state: product,\n        }}\n      >\n        VER DATALHES\n      </Link>\n    </button>\n  );\n}\nclass ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      showProducts: false,\n    };\n  }\n\n  componentDidMount() {\n    const { category, item } = this.props;\n    api.getProductsFromCategoryAndQuery(category, item)\n      .then((result) => {\n        this.setState({\n          products: result.results,\n          showProducts: true,\n        });\n      });\n  }\n\n  render() {\n    const { products, showProducts } = this.state;\n    if (products.length === 0 && showProducts === true) {\n      return <p>Nenhum produto foi encontrado</p>;\n    }\n    return (\n      <div className=\"product-list\">\n        {products.map((product) => (\n          <div key={product.id} className=\"product\" data-testid=\"product\">\n            <p className=\"search-result\">{product.title}</p>\n            <img src={product.thumbnail} alt=\"foto\" />\n            <p>\n              R$\n              {product.price}\n            </p>\n            {product.shipping.free_shipping && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n            {renderButton(product.id, product)}\n            <ButtonListing product={product} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cart from './cart.png';\nimport './ButtonCart.css';\n\nfunction ButtonCart() {\n  let storage = JSON.parse(localStorage.getItem('cart'));\n  if (storage === null) {\n    storage = [];\n  }\n  const total = storage.reduce((sum, e) => (sum + e.total), 0);\n\n  return (\n    <div className=\"cart-info\">\n      <Link to=\"/cart\">\n        <img\n          src={cart}\n          width=\"70px\"\n          alt=\"cart-icon\" data-testid=\"shopping-cart-button\" className=\"img-cart\"\n        />\n      </Link>\n      <p>Produtos no Carrinho: </p>\n      <div data-testid=\"shopping-cart-size\">{total || '0'}</div>\n    </div>\n  );\n}\n\nexport default ButtonCart;\n","import React from 'react';\nimport './SearchBar.css';\nimport ProductList from './ProductList';\nimport ButtonCart from './ButtonCart';\nimport * as api from '../services/api';\n\nfunction addText() {\n  return (\n    <p data-testid=\"home-initial-message\" className=\"texto-pesquisa\">\n      Digite algum termo de pesquisa ou escolha uma categoria.\n    </p>\n  );\n}\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: '',\n      category: '',\n      search: false,\n      searchWithCategory: false,\n      categories: [],\n    };\n    this.changeValue = this.changeValue.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((result) => this.setState({ categories: result }));\n  }\n\n  getCategory(categoryId) {\n    this.setState({\n      category: categoryId,\n      search: false,\n      searchWithCategory: true,\n    });\n  }\n\n  doSearch() {\n    this.setState({\n      search: true,\n      searchWithCategory: false,\n    });\n  }\n\n  changeValue(e) {\n    this.setState({\n      item: e.target.value,\n      search: false,\n    });\n  }\n\n  renderSearchBar() {\n    return (\n      <center>\n        <input\n          data-testid=\"query-input\"\n          type=\"text\"\n          className=\"input\"\n          onChange={this.changeValue}\n        />\n        {addText()}\n      </center>\n    );\n  }\n\n  renderCategories() {\n    const { categories } = this.state;\n    return (\n      categories.map((el) => (\n        <div className=\"categories\">\n          <button\n            type=\"button\"\n            data-testid=\"category\"\n            key={el.id}\n            value={el.name}\n            onClick={() => this.getCategory(el.id)}\n          >\n            {el.name}\n          </button>\n        </div>\n      )));\n  }\n\n  render() {\n    const { item, search, searchWithCategory, category } = this.state;\n    return (\n      <div>\n        <div className=\"top-bar\">\n          <div className=\"searchbar\">\n            {this.renderSearchBar()}\n            <button\n              data-testid=\"query-button\"\n              type=\"button\"\n              onClick={() => this.doSearch()}\n            >\n              PESQUISAR\n            </button>\n          </div>\n          <ButtonCart className=\"cart-icon\" />\n        </div>\n        <div className=\"product-sidebar\">\n          {/* <Categories click={(event) => this.getCategorie(event)} /> */}\n          <div className=\"aside-categoria\">\n            <h3>Ou selecione uma categoria:</h3>\n            {this.renderCategories()}\n          </div>\n          {search && <ProductList item={item} />}\n          {searchWithCategory && <ProductList category={category} item={item} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './CartPage.css';\n\nclass CartItem extends React.Component {\n  constructor(props) {\n    super(props);\n    const { total } = this.props;\n    this.state = { total };\n  }\n\n  decrease() {\n    const { total } = this.state;\n    if (total > 0) {\n      this.setState((state) => ({ total: state.total - 1 }));\n    }\n  }\n\n  increase() {\n    const { quantity } = this.props;\n    const { total } = this.state;\n    if (total < quantity) {\n      this.setState((state) => ({ total: state.total + 1 }));\n    }\n  }\n\n  render() {\n    const { total } = this.state;\n    const { title, thumbnail, price } = this.props;\n    return (\n      <div className=\"cart-item\">\n        <img src={thumbnail} alt={title} />\n        <p data-testid=\"shopping-cart-product-name\">{title}</p>\n        <button\n          type=\"button\"\n          data-testid=\"product-decrease-quantity\"\n          onClick={() => this.decrease(total)}\n        >\n          -\n        </button>\n        <p data-testid=\"shopping-cart-product-quantity\">{total}</p>\n        <button\n          type=\"button\"\n          data-testid=\"product-increase-quantity\"\n          onClick={() => this.increase()}\n        >\n          +\n        </button>\n        <div>{`Valor: R$${price}`}</div>\n      </div>\n    );\n  }\n}\n\nexport default CartItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CartPage.css';\nimport CartItem from './CartItem';\n\nfunction renderEmptyCartMessage() {\n  return (\n    <div className=\"empty-page\">\n      <div className=\"empty_content\" data-testid=\"shopping-cart-empty-message\">\n        Seu carrinho está vazio\n      </div>\n      <Link to=\"/\"><button type=\"button\" className=\"back-button\">VOLTAR</button></Link>\n    </div>\n  );\n}\n\nfunction renderOptionButtons() {\n  return (\n    <div className=\"option-buttons\">\n      <Link to=\"/\"><button type=\"button\">VOLTAR</button></Link>\n      <Link data-testid=\"checkout-products\" to=\"/checkout\">\n        <button type=\"button\">FINALIZAR COMPRA</button>\n      </Link>\n    </div>\n  );\n}\n\nclass CartPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const products = JSON.parse(localStorage.getItem('cart'));\n    this.state = { arrayProducts: products };\n  }\n\n  componentDidMount() {\n    const { arrayProducts } = this.state;\n    localStorage.setItem('cart', JSON.stringify(arrayProducts));\n    if (arrayProducts) {\n      const totalItems = 1;\n      localStorage.setItem('totalItems', totalItems);\n    }\n  }\n\n  render() {\n    const { arrayProducts } = this.state;\n    if (arrayProducts && (arrayProducts.length !== 0)) {\n      return (\n        <div className=\"container\">\n          <h2 className=\"h2-fixo\">Carrinho de compras: </h2>\n          <div className=\"lista-pai\">\n            {arrayProducts.map((e) => (\n              <CartItem\n                key={e.title}\n                title={e.title}\n                total={e.total}\n                price={e.price}\n                thumbnail={e.thumbnail}\n                quantity={e.available_quantity}\n              />\n            ))}\n          </div>\n          {renderOptionButtons()}\n        </div>\n      );\n    }\n    return (\n      renderEmptyCartMessage()\n    );\n  }\n}\n\nexport default CartPage;\n","import React from 'react';\n\nclass Increment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { total: 0 };\n  }\n\n  decrease() {\n    const { total } = this.state;\n    if (total > 0) {\n      this.setState((state) => ({ total: state.total - 1 }));\n    }\n  }\n\n  increase() {\n    const { quantity } = this.props;\n    const { total } = this.state;\n    if (total < quantity) {\n      this.setState((state) => ({ total: state.total + 1 }));\n    }\n  }\n\n  addToCart() {\n    const { total } = this.state;\n    const { info } = this.props;\n    const infoWithQuantity = { ...info, total };\n    let storage = JSON.parse(localStorage.getItem('cart'));\n    if (storage === null) {\n      storage = [];\n    }\n    const newStorage = JSON.stringify([...storage, infoWithQuantity]);\n    localStorage.setItem('cart', newStorage);\n  }\n\n  render() {\n    const { total } = this.state;\n    return (\n      <div>\n        <h1>Quantidade</h1>\n        <button type=\"button\" className=\"increment\" onClick={() => this.decrease()}>-</button>\n        {total}\n        <button type=\"button\" className=\"increment\" onClick={() => this.increase()}>+</button>\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          onClick={() => this.addToCart()}\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Increment;\n","import React from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\nimport './Rating.css';\nimport './Comments.css';\n\nclass Comments extends React.Component {\n  renderComments() {\n    const storage = JSON.parse(localStorage.getItem('comments'));\n    return (\n      storage.map((e) => (\n        <div className=\"comment\" key={e.email}>\n          <p>{`Email: ${e.email}`}</p>\n          <p>{`Mensagem: ${e.message}`}</p>\n          <p>\n            Nota:\n            <StarRatingComponent\n              name=\"rate1\"\n              className=\"stars\"\n              starCount={5}\n              value={e.rating}\n              onStarClick={() => this.onStarClick()}\n            />\n          </p>\n        </div>\n      )));\n  }\n\n  render() {\n    const storage = JSON.parse(localStorage.getItem('comments'));\n    if (!storage) {\n      return (\n        <div className=\"comment-box\">\n          <h1>Comentários</h1>\n          <p>Sem comentários ainda</p>\n        </div>\n      );\n    }\n    return (\n      <div className=\"comment-box\">\n        <h1>Comentários</h1>\n        <div data-testid=\"product-detail-evaluation\">\n          {this.renderComments()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import StarRatingComponent from 'react-star-rating-component';\nimport React from 'react';\nimport './Rating.css';\nimport Comments from './Comments';\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      message: '',\n      rating: 0,\n    };\n  }\n\n  onStarClick(event) {\n    this.setState({ rating: event });\n  }\n\n  updateField(field, event) {\n    this.setState({ [field]: event.target.value });\n  }\n\n  createComment() {\n    const { email, message, rating } = this.state;\n    let storage = JSON.parse(localStorage.getItem('comments'));\n    if (storage === null) { storage = []; }\n    const newStorage = [...storage, { email, message, rating }];\n    localStorage.setItem('comments', [JSON.stringify(newStorage)]);\n    this.setState({\n      email: '',\n      message: '',\n      rating: 0,\n    });\n  }\n\n  renderEmail() {\n    const { email } = this.state;\n    return (\n      <div className=\"rating-section\">\n        <input\n          id=\"email\"\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={(event) => this.updateField('email', event)}\n        />\n      </div>\n    );\n  }\n\n  renderTextArea() {\n    const { message } = this.state;\n    return (\n      <textarea\n        placeholder=\"Mensagem\"\n        data-testid=\"product-detail-evaluation\"\n        value={message}\n        onChange={(event) => this.updateField('message', event)}\n      />\n    );\n  }\n\n  render() {\n    const { rating } = this.state;\n    return (\n      <div>\n        <form>\n          <h2>Deixe sua Avaliação</h2>\n          <StarRatingComponent\n            name=\"rate1\"\n            className=\"stars\"\n            starCount={5}\n            value={rating}\n            onStarClick={(e) => this.onStarClick(e)}\n          />\n          {this.renderEmail()}\n          {this.renderTextArea()}\n          <button type=\"button\" className=\"rating-button\" onClick={() => this.createComment()}>\n            Avaliar\n          </button>\n        </form>\n        <div>\n          <Comments />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProductDetails.css';\nimport Increment from './Increment';\nimport Rating from './Rating';\nimport ButtonCart from './ButtonCart';\n\nexport default class ProductDetails extends Component {\n  render() {\n    const {\n      location: {\n        state: {\n          title, price, id, thumbnail,\n          address, condition, available_quantity: avail,\n        },\n      },\n    } = this.props;\n    const { location: { state } } = this.props;\n\n    return (\n      <section>\n        <div className=\"headerDetails\">\n          <div data-testid=\"product\">\n            <h3 data-testid=\"product-detail-name\">{title}</h3>\n            <h4>{id}</h4>\n            <img src={thumbnail} alt={title} />\n            <h4>{`Preço: R$ ${price}`}</h4>\n            <p>{address.city_name}</p>\n            <p>{condition}</p>\n            <Increment quantity={avail} info={state} />\n            <Link to=\"/\"><button type=\"button\">VOLTAR</button></Link>\n            <Rating />\n          </div>\n        </div>\n        <ButtonCart />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Checkout.css';\n\n\nfunction renderForm() {\n  return (\n    <form>\n      <label htmlFor=\"name\">\n        Nome Completo:\n        <input id=\"name\" data-testid=\"checkout-fullname\" />\n      </label>\n      <label htmlFor=\"email\">\n        Email:\n        <input id=\"email\" data-testid=\"checkout-email\" />\n      </label>\n      <label htmlFor=\"cpf\">\n        CPF:\n        <input id=\"cpf\" data-testid=\"checkout-cpf\" />\n      </label>\n      <label htmlFor=\"phone-number\">\n        Telefone:\n        <input id=\"phone-number\" data-testid=\"checkout-phone\" />\n      </label>\n      <label htmlFor=\"zip\">\n        CEP:\n        <input id=\"zip\" data-testid=\"checkout-cep\" />\n      </label>\n      <label htmlFor=\"address\">\n        Endereço:\n        <input id=\"address\" data-testid=\"checkout-address\" />\n      </label>\n    </form>\n  );\n}\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { total: 0 };\n  }\n\n  componentDidMount() {\n    this.renderTotal();\n  }\n\n  calculateTotal(total, price) {\n    const finalValue = total * price;\n    this.setState((state) => ({ total: state.total + finalValue }));\n  }\n\n  renderTotal() {\n    const storage = JSON.parse(localStorage.getItem('cart'));\n    const FinalValue = (storage.reduce((sum, e) => (sum + (e.total * e.price)), 0).toFixed(2));\n    this.setState(() => ({ total: FinalValue }));\n  }\n\n  render() {\n    const storage = JSON.parse(localStorage.getItem('cart'));\n    const { total } = this.state;\n    return (\n      <div>\n        <div className=\"list\">\n          <div className=\"list-child\">\n            {storage.map((e) => (\n              <div key={e.title}>\n                <div>\n                  <span>{e.title}</span>\n                  <span>{e.total}</span>\n                  <span>{e.price}</span>\n                </div>\n              </div>\n            ))}\n\n          </div>\n          <div className=\"total\">\n            <span>Total</span>\n            <span>{total}</span>\n          </div>\n        </div>\n        {renderForm()}\n        <Link to=\"/\"><button type=\"button\">VOLTAR</button></Link>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport './Footer.css';\n\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <span className=\"nomes\">Fabiano Emiliano<br />\n        Henrique Baêta<br />\n        Rodrigo Brezolin<br />\n        2020\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SearchBar from './components/SearchBar';\nimport CartPage from './components/CartPage';\nimport ProductDetails from './components/ProductDetails';\nimport Checkout from './components/Checkout';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.title = 'Front End Online Store'\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/cart\" component={CartPage} />\n            <Route path=\"/:id/details\" component={ProductDetails} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route exact path=\"/\" component={SearchBar} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}